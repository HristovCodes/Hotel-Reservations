{"version":3,"sources":["firebase.js","components/User/index.js","components/Client/index.js","components/Room/index.js","components/Reservation/index.js","components/NoMatch/index.js","components/Login/index.js","components/Main/index.js","components/Routing/index.js","reportWebVitals.js","index.js"],"names":["setData","path","data","firebase","database","ref","update","catch","e","console","log","code","message","deleteData","id","a","remove","orderData","query","ammount","orderByChild","limitToFirst","once","response","Error","forEach","v","push","val","pullData","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","auth","User","useState","users","setUsers","search","setSearch","useEffect","pullUsers","sorting","pagination","then","u","formatUser","usersData","map","user","username","firstname","middlename","lastname","email","slice","indexOf","phonenumber","dateemployed","active","toString","releasedate","className","onClick","temp","splice","Form","htmlFor","name","type","onChange","matches","Object","values","includes","length","undefined","searchUser","target","value","open","setOpen","setID","setUsername","firstName","setFirstName","middleName","setMiddleName","lastName","setLastName","phoneNumber","setPhoneNumber","setEmail","dateEmployed","setDateEmployed","setActive","releaseDate","setReleaseDate","onSubmit","preventDefault","reset","match","Client","clients","setClients","pullClients","formatClient","clientsData","client","adult","searchClient","setAdult","Room","rooms","setRooms","pullRooms","formatRoom","roomsData","room","capacity","occupied","kid","number","searchRoom","setCapacity","setType","setOccupied","setKid","setNumber","Reservation","reservations","setReservations","pullReservations","formatReservation","reservationsData","reservation","roomnum","usercreated","price","occupants","o","dateaccommodation","daterelease","breakfast","allinclusive","searchReservation","searchOccupant","setSearchOccupant","roomNum","setRoomNum","userCreated","setUserCreated","setOccupants","dateAccommodation","setDateAccomodation","dateRelease","setDateRelease","setBreakfast","allInclusive","setAllInclusive","currentUser","datediff","Math","floor","Date","parse","r","reduce","obj","item","toFixed","c","NoMatch","Login","password","setPassword","history","useHistory","signInWithEmailAndPassword","onAuthStateChanged","replace","required","placeholder","Main","to","Routing","setUser","exact","PrivateRoute","children","rest","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6a67b0e1.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/database\";\r\nimport \"firebase/auth\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAY0spgQbLTx1eF4UfPwzC4vUOLOiZ99LQ\",\r\n  authDomain: \"hotel-reservations-itk.firebaseapp.com\",\r\n  databaseURL: \"https://hotel-reservations-itk-default-rtdb.firebaseio.com\",\r\n  projectId: \"hotel-reservations-itk\",\r\n  storageBucket: \"hotel-reservations-itk.appspot.com\",\r\n  messagingSenderId: \"199246928160\",\r\n  appId: \"1:199246928160:web:7ec21b444b4660d8ec1f45\",\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport function setData(path, data) {\r\n  firebase\r\n    .database()\r\n    .ref(`${path}/`)\r\n    .update(data)\r\n    .catch((e) => console.log(`${e.code}\\n${e.message}`));\r\n}\r\n\r\nexport async function deleteData(path, id) {\r\n  firebase.database().ref(`${path}/${id}`).remove();\r\n}\r\n\r\nexport async function orderData(path, query, ammount) {\r\n  let response = await firebase\r\n    .database()\r\n    .ref(`${path}/`)\r\n    .orderByChild(query)\r\n    .limitToFirst(ammount)\r\n    .once(\"value\");\r\n\r\n  if (response.code) {\r\n    throw new Error(response.code);\r\n  } else {\r\n    const data = [];\r\n    response.forEach((v) => {\r\n      data.push(v.val());\r\n    });\r\n    return data;\r\n  }\r\n}\r\n\r\nexport async function pullData(path, query) {\r\n  let response = await firebase\r\n    .database()\r\n    .ref(`${path}/`)\r\n    .orderByChild(query)\r\n    .once(\"value\");\r\n\r\n  if (response.code) {\r\n    throw new Error(response.code);\r\n  } else {\r\n    const data = [];\r\n    response.forEach((v) => {\r\n      data.push(v.val());\r\n    });\r\n    return data;\r\n  }\r\n}\r\n\r\nconst firebaseInstance = {\r\n  database: firebase.database,\r\n  auth: firebase.auth,\r\n};\r\n\r\nexport default firebaseInstance;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { orderData, setData, deleteData } from \"../../firebase\";\r\nimport \"../SharedStyles/styles.scss\";\r\n\r\nexport default function User() {\r\n  const [users, setUsers] = useState();\r\n  const [search, setSearch] = useState();\r\n\r\n  useEffect(() => {\r\n    if (!users) pullUsers(\"id\", 10);\r\n  });\r\n\r\n  const searchUser = (query) => {\r\n    let temp = users.slice();\r\n    let matches = [];\r\n    temp.forEach((u) => {\r\n      if (Object.values(u).includes(query)) {\r\n        matches.push(u);\r\n      }\r\n    });\r\n    if (matches.length > 0) {\r\n      return setSearch(matches);\r\n    }\r\n    setSearch(undefined);\r\n  };\r\n\r\n  // takes care of the initial call to the db to get all the users\r\n  const pullUsers = (sorting, pagination) => {\r\n    orderData(\"user\", sorting, pagination)\r\n      .then((u) => {\r\n        setUsers(u);\r\n      })\r\n      .catch((e) => console.log(e));\r\n  };\r\n\r\n  const formatUser = (usersData) => {\r\n    return usersData\r\n      ? usersData.map((user) => (\r\n          <span key={user.id}>\r\n            <p>{user.id}</p>\r\n            <p>{user.username}</p>\r\n            <p>{user.firstname}</p>\r\n            <p>{user.middlename}</p>\r\n            <p>{user.lastname}</p>\r\n            <p>{user.email.slice(0, user.email.indexOf(\"@\"))}</p>\r\n            <p>{user.phonenumber}</p>\r\n            <p>{user.dateemployed}</p>\r\n            <p>{user.active.toString()}</p>\r\n            {user.releasedate ? <p>{user.releasedate}</p> : <p>-</p>}\r\n            <p\r\n              className=\"action\"\r\n              onClick={() => {\r\n                deleteData(\"user\", user.id);\r\n                let temp = users.slice();\r\n                temp.splice(temp.indexOf(user), 1);\r\n                setUsers(temp);\r\n              }}\r\n            >\r\n              Delete\r\n            </p>\r\n          </span>\r\n        ))\r\n      : \"Loading...\";\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Add users:</h2>\r\n      <Form users={users} setUsers={setUsers}></Form>\r\n      <h1>Users:</h1>\r\n      <div>\r\n        <label htmlFor=\"search\">Search:</label>\r\n        <input\r\n          name=\"search\"\r\n          type=\"text\"\r\n          onChange={(e) => searchUser(e.target.value)}\r\n        ></input>\r\n      </div>\r\n      <div>\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => {\r\n            pullUsers(\"id\", 10);\r\n          }}\r\n        >\r\n          10\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => {\r\n            pullUsers(\"id\", 25);\r\n          }}\r\n        >\r\n          25\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => {\r\n            pullUsers(\"id\", 50);\r\n          }}\r\n        >\r\n          50\r\n        </button>\r\n      </div>\r\n      <div className=\"list\">\r\n        <span className=\"columns\">\r\n          <p\r\n            className=\"clickable\"\r\n            onClick={() => {\r\n              pullUsers(\"id\", 10);\r\n            }}\r\n          >\r\n            ID\r\n          </p>\r\n          <p\r\n            className=\"clickable\"\r\n            onClick={() => {\r\n              pullUsers(\"username\", 10);\r\n            }}\r\n          >\r\n            username\r\n          </p>\r\n          <p\r\n            className=\"clickable\"\r\n            onClick={() => {\r\n              pullUsers(\"firstname\", 10);\r\n            }}\r\n          >\r\n            firstName\r\n          </p>\r\n          <p\r\n            className=\"clickable\"\r\n            onClick={() => {\r\n              pullUsers(\"middlename\", 10);\r\n            }}\r\n          >\r\n            middleName\r\n          </p>\r\n          <p\r\n            className=\"clickable\"\r\n            onClick={() => {\r\n              pullUsers(\"lastname\", 10);\r\n            }}\r\n          >\r\n            lastName\r\n          </p>\r\n          <p\r\n            className=\"clickable\"\r\n            onClick={() => {\r\n              pullUsers(\"email\", 10);\r\n            }}\r\n          >\r\n            email\r\n          </p>\r\n          <p>phoneNumber</p>\r\n          <p>dateEmployed</p>\r\n          <p>active</p>\r\n          <p>dateReleased</p>\r\n          <p>Delete</p>\r\n        </span>\r\n        {search ? formatUser(search) : formatUser(users)}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nfunction Form({ users, setUsers }) {\r\n  const [open, setOpen] = useState(false);\r\n  const [id, setID] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [middleName, setMiddleName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [dateEmployed, setDateEmployed] = useState(\"\");\r\n  const [active, setActive] = useState(false);\r\n  const [releaseDate, setReleaseDate] = useState(null);\r\n\r\n  const addUser = (e) => {\r\n    e.preventDefault();\r\n    e.target.reset();\r\n\r\n    if (\r\n      id &&\r\n      username &&\r\n      firstName &&\r\n      middleName &&\r\n      lastName &&\r\n      phoneNumber &&\r\n      email &&\r\n      dateEmployed\r\n    ) {\r\n      // create the object and push it to the db\r\n      let data = {};\r\n      data[id] = {\r\n        id: id,\r\n        username: username,\r\n        firstname: firstName,\r\n        middlename: middleName,\r\n        lastname: lastName,\r\n        phonenumber: phoneNumber,\r\n        email: email,\r\n        dateemployed: dateEmployed,\r\n        active: active,\r\n        releasedate: releaseDate,\r\n      };\r\n      setData(\"user\", data);\r\n\r\n      // update the state with the new object so we don't have to pull whole db again\r\n      let temp = users.slice();\r\n      let match = false;\r\n      temp.forEach((u) => {\r\n        if (Object.values(u).includes(phoneNumber)) {\r\n          temp[temp.indexOf(u)] = data[id];\r\n          setUsers(temp);\r\n          setOpen(false);\r\n          match = true;\r\n        }\r\n      });\r\n      if (!match) {\r\n        temp.push(data[id]);\r\n        setUsers(temp);\r\n        setOpen(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  return open ? (\r\n    <form className=\"form\" onSubmit={addUser}>\r\n      <label htmlFor=\"id\">ЕГН:</label>\r\n      <input\r\n        onChange={(e) => {\r\n          setID(e.target.value);\r\n        }}\r\n        name=\"id\"\r\n        type=\"text\"\r\n      ></input>\r\n      <label htmlFor=\"username\">Потребителско име:</label>\r\n      <input\r\n        onChange={(e) => {\r\n          setUsername(e.target.value);\r\n        }}\r\n        name=\"username\"\r\n        type=\"text\"\r\n      ></input>\r\n      <label htmlFor=\"firstName\">Име:</label>\r\n      <input\r\n        onChange={(e) => {\r\n          setFirstName(e.target.value);\r\n        }}\r\n        name=\"firstName\"\r\n        type=\"text\"\r\n      ></input>\r\n      <label htmlFor=\"middleName\">Бащино име:</label>\r\n      <input\r\n        onChange={(e) => {\r\n          setMiddleName(e.target.value);\r\n        }}\r\n        name=\"middleName\"\r\n        type=\"text\"\r\n      ></input>\r\n      <label htmlFor=\"lastName\">Фамилно име:</label>\r\n      <input\r\n        onChange={(e) => {\r\n          setLastName(e.target.value);\r\n        }}\r\n        name=\"lastName\"\r\n        type=\"text\"\r\n      ></input>\r\n      <label htmlFor=\"phoneNumber\">Телефон:</label>\r\n      <input\r\n        onChange={(e) => {\r\n          setPhoneNumber(e.target.value);\r\n        }}\r\n        name=\"phoneNumber\"\r\n        type=\"text\"\r\n      ></input>\r\n      <label htmlFor=\"email\">Имейл:</label>\r\n      <input\r\n        onChange={(e) => {\r\n          setEmail(e.target.value);\r\n        }}\r\n        name=\"email\"\r\n        type=\"text\"\r\n      ></input>\r\n      <label htmlFor=\"dateEmployed\">Дата на назначаване:</label>\r\n      <input\r\n        onChange={(e) => {\r\n          setDateEmployed(e.target.value);\r\n        }}\r\n        name=\"dateEmployed\"\r\n        type=\"date\"\r\n      ></input>\r\n      <label htmlFor=\"active\">Статус:</label>\r\n      <div>\r\n        <input\r\n          onChange={(e) => {\r\n            setActive(true);\r\n          }}\r\n          name=\"active\"\r\n          id=\"act1\"\r\n          type=\"radio\"\r\n          value=\"Активен\"\r\n        ></input>\r\n        <label htmlFor=\"act1\">Активен</label>\r\n      </div>\r\n      <div>\r\n        <input\r\n          onChange={(e) => {\r\n            setActive(false);\r\n          }}\r\n          name=\"active\"\r\n          id=\"act2\"\r\n          type=\"radio\"\r\n          value=\"Уволнен\"\r\n        ></input>\r\n        <label htmlFor=\"act2\">Не активен</label>\r\n      </div>\r\n      <label htmlFor=\"releaseDate\">\r\n        <span>Пуснат от длъжност на:</span>\r\n      </label>\r\n      <input\r\n        onChange={(e) => {\r\n          setReleaseDate(e.target.value);\r\n        }}\r\n        name=\"releaseDate\"\r\n        type=\"date\"\r\n      ></input>\r\n      <button type=\"submit\">Добави</button>\r\n    </form>\r\n  ) : (\r\n    <button\r\n      onClick={() => {\r\n        setOpen(true);\r\n      }}\r\n    >\r\n      Add/Edit user\r\n    </button>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { orderData, setData, deleteData } from \"../../firebase\";\r\nimport \"../SharedStyles/styles.scss\";\r\n\r\nexport default function Client() {\r\n  const [clients, setClients] = useState();\r\n  const [search, setSearch] = useState();\r\n\r\n  useEffect(() => {\r\n    if (!clients) pullClients(\"id\", 10);\r\n  });\r\n\r\n  const searchClient = (query) => {\r\n    let temp = clients.slice();\r\n    let matches = [];\r\n    temp.forEach((u) => {\r\n      if (Object.values(u).includes(query)) {\r\n        matches.push(u);\r\n      }\r\n    });\r\n    if (matches.length > 0) {\r\n      return setSearch(matches);\r\n    }\r\n    setSearch(undefined);\r\n  };\r\n\r\n  // takes care of the initial call to the db to get all the clients\r\n  const pullClients = (sorting, pagination) => {\r\n    orderData(\"client\", sorting, pagination)\r\n      .then((u) => {\r\n        setClients(u);\r\n      })\r\n      .catch((e) => console.log(e));\r\n  };\r\n\r\n  const formatClient = (clientsData) => {\r\n    return clientsData\r\n      ? clientsData.map((client) => (\r\n          <span key={client.phonenumber}>\r\n            <p>{client.firstname}</p>\r\n            <p>{client.lastname}</p>\r\n            <p>{client.phonenumber}</p>\r\n            <p>{client.adult.toString()}</p>\r\n            <p>{client.email.slice(0, client.email.indexOf(\"@\"))}</p>\r\n            <p\r\n              className=\"action\"\r\n              onClick={() => {\r\n                deleteData(\"client\", client.phonenumber);\r\n                let temp = clients.slice();\r\n                temp.splice(temp.indexOf(client), 1);\r\n                setClients(temp);\r\n              }}\r\n            >\r\n              Delete\r\n            </p>\r\n          </span>\r\n        ))\r\n      : \"Loading...\";\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Add clients:</h2>\r\n      <Form clients={clients} setClients={setClients}></Form>\r\n      <h1>Clients:</h1>\r\n      <div>\r\n        <label htmlFor=\"search\">Search:</label>\r\n        <input\r\n          name=\"search\"\r\n          type=\"text\"\r\n          onChange={(e) => searchClient(e.target.value)}\r\n        ></input>\r\n      </div>\r\n      <div>\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => {\r\n            pullClients(\"id\", 10);\r\n          }}\r\n        >\r\n          10\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => {\r\n            pullClients(\"id\", 25);\r\n          }}\r\n        >\r\n          25\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => {\r\n            pullClients(\"id\", 50);\r\n          }}\r\n        >\r\n          50\r\n        </button>\r\n      </div>\r\n      <div className=\"list\">\r\n        <span className=\"columns\">\r\n          <p\r\n            className=\"clickable\"\r\n            onClick={() => {\r\n              pullClients(\"firstname\", 10);\r\n            }}\r\n          >\r\n            firstName\r\n          </p>\r\n          <p\r\n            className=\"clickable\"\r\n            onClick={() => {\r\n              pullClients(\"lastname\", 10);\r\n            }}\r\n          >\r\n            lastName\r\n          </p>\r\n          <p>phoneNumber</p>\r\n          <p>adult</p>\r\n          <p>email</p>\r\n          <p>Delete</p>\r\n        </span>\r\n        {search ? formatClient(search) : formatClient(clients)}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Form({ clients, setClients }) {\r\n  const [open, setOpen] = useState(false);\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [adult, setAdult] = useState(false);\r\n\r\n  const addClient = (e) => {\r\n    e.preventDefault();\r\n    e.target.reset();\r\n\r\n    if (firstName && lastName && phoneNumber && email) {\r\n      // create the object and push it to the db\r\n      let data = {};\r\n      data[phoneNumber] = {\r\n        firstname: firstName,\r\n        lastname: lastName,\r\n        phonenumber: phoneNumber,\r\n        email: email,\r\n        adult: adult,\r\n      };\r\n      setData(\"client\", data);\r\n\r\n      // update the state with the new object so we don't have to pull whole db again\r\n      let temp = clients.slice();\r\n      let match = false;\r\n      temp.forEach((u) => {\r\n        if (Object.values(u).includes(phoneNumber)) {\r\n          temp[temp.indexOf(u)] = data[phoneNumber];\r\n          setClients(temp);\r\n          setOpen(false);\r\n          match = true;\r\n        }\r\n      });\r\n      if (!match) {\r\n        temp.push(data[phoneNumber]);\r\n        setClients(temp);\r\n        setOpen(false);\r\n      }\r\n    }\r\n  };\r\n  return open ? (\r\n    <form className=\"form\" onSubmit={addClient}>\r\n      <label htmlFor=\"firstName\">Име:</label>\r\n      <input\r\n        onChange={(e) => {\r\n          setFirstName(e.target.value);\r\n        }}\r\n        name=\"firstName\"\r\n        type=\"text\"\r\n      ></input>\r\n      <label htmlFor=\"lastName\">Фамилно име:</label>\r\n      <input\r\n        onChange={(e) => {\r\n          setLastName(e.target.value);\r\n        }}\r\n        name=\"lastName\"\r\n        type=\"text\"\r\n      ></input>\r\n      <label htmlFor=\"phoneNumber\">Телефон:</label>\r\n      <input\r\n        onChange={(e) => {\r\n          setPhoneNumber(e.target.value);\r\n        }}\r\n        name=\"phoneNumber\"\r\n        type=\"text\"\r\n      ></input>\r\n      <label htmlFor=\"email\">Имейл:</label>\r\n      <input\r\n        onChange={(e) => {\r\n          setEmail(e.target.value);\r\n        }}\r\n        name=\"email\"\r\n        type=\"text\"\r\n      ></input>\r\n      <label htmlFor=\"active\">Статус:</label>\r\n      <div>\r\n        <input\r\n          onChange={(e) => {\r\n            setAdult(true);\r\n          }}\r\n          name=\"active\"\r\n          id=\"act1\"\r\n          type=\"radio\"\r\n          value=\"Активен\"\r\n        ></input>\r\n        <label htmlFor=\"act1\">Възрастен</label>\r\n      </div>\r\n      <div>\r\n        <input\r\n          onChange={(e) => {\r\n            setAdult(false);\r\n          }}\r\n          name=\"active\"\r\n          id=\"act2\"\r\n          type=\"radio\"\r\n          value=\"Уволнен\"\r\n        ></input>\r\n        <label htmlFor=\"act2\">Дете</label>\r\n      </div>\r\n      <button type=\"submit\">Добави</button>\r\n    </form>\r\n  ) : (\r\n    <button\r\n      onClick={() => {\r\n        setOpen(true);\r\n      }}\r\n    >\r\n      Add/Edit client\r\n    </button>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { orderData, setData, deleteData } from \"../../firebase\";\r\nimport \"../SharedStyles/styles.scss\";\r\n\r\nexport default function Room() {\r\n  const [rooms, setRooms] = useState();\r\n  const [search, setSearch] = useState();\r\n\r\n  useEffect(() => {\r\n    if (!rooms) pullRooms(\"capacity\", 10);\r\n  });\r\n\r\n  const searchRoom = (query) => {\r\n    let temp = rooms.slice();\r\n    let matches = [];\r\n    temp.forEach((u) => {\r\n      if (Object.values(u).includes(query)) {\r\n        matches.push(u);\r\n      }\r\n    });\r\n    if (matches.length > 0) {\r\n      return setSearch(matches);\r\n    }\r\n    setSearch(undefined);\r\n  };\r\n\r\n  // takes care of the initial call to the db to get all the rooms\r\n  const pullRooms = (sorting, pagination) => {\r\n    orderData(\"room\", sorting, pagination)\r\n      .then((u) => {\r\n        setRooms(u);\r\n      })\r\n      .catch((e) => console.log(e));\r\n  };\r\n\r\n  const formatRoom = (roomsData) => {\r\n    return roomsData\r\n      ? roomsData.map((room) => (\r\n          <span key={room.number}>\r\n            <p>{room.capacity}</p>\r\n            <p>{room.type}</p>\r\n            <p>{room.occupied.toString()}</p>\r\n            <p>{room.adult}</p>\r\n            <p>{room.kid}</p>\r\n            <p>{room.number}</p>\r\n            <p\r\n              className=\"action\"\r\n              onClick={() => {\r\n                deleteData(\"room\", room.number);\r\n                let temp = rooms.slice();\r\n                temp.splice(temp.indexOf(room), 1);\r\n                setRooms(temp);\r\n              }}\r\n            >\r\n              Delete\r\n            </p>\r\n          </span>\r\n        ))\r\n      : \"Loading...\";\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Add rooms:</h2>\r\n      <Form rooms={rooms} setRooms={setRooms}></Form>\r\n      <h1>Rooms:</h1>\r\n      <div>\r\n        <label htmlFor=\"search\">Search:</label>\r\n        <input\r\n          name=\"search\"\r\n          type=\"text\"\r\n          onChange={(e) => searchRoom(e.target.value)}\r\n        ></input>\r\n      </div>\r\n      <div>\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => {\r\n            pullRooms(\"capacity\", 10);\r\n          }}\r\n        >\r\n          10\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => {\r\n            pullRooms(\"capacity\", 25);\r\n          }}\r\n        >\r\n          25\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => {\r\n            pullRooms(\"capacity\", 50);\r\n          }}\r\n        >\r\n          50\r\n        </button>\r\n      </div>\r\n      <div className=\"list\">\r\n        <span className=\"columns\">\r\n          <p\r\n            className=\"clickable\"\r\n            onClick={() => {\r\n              pullRooms(\"capacity\", 10);\r\n            }}\r\n          >\r\n            capacity\r\n          </p>\r\n          <p\r\n            className=\"clickable\"\r\n            onClick={() => {\r\n              pullRooms(\"type\", 10);\r\n            }}\r\n          >\r\n            type\r\n          </p>\r\n          <p\r\n            className=\"clickable\"\r\n            onClick={() => {\r\n              pullRooms(\"occupation\", 10);\r\n            }}\r\n          >\r\n            occupation\r\n          </p>\r\n          <p>adultPrice</p>\r\n          <p>kidPrice</p>\r\n          <p>roomNumber</p>\r\n          <p>Delete</p>\r\n        </span>\r\n        {search ? formatRoom(search) : formatRoom(rooms)}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Form({ rooms, setRooms }) {\r\n  const [open, setOpen] = useState(false);\r\n  const [capacity, setCapacity] = useState(\"\");\r\n  const [type, setType] = useState(\"\");\r\n  const [occupied, setOccupied] = useState(false);\r\n  const [adult, setAdult] = useState(\"\");\r\n  const [kid, setKid] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const addRoom = (e) => {\r\n    e.preventDefault();\r\n    e.target.reset();\r\n\r\n    if (capacity && type && adult && kid && number) {\r\n      // create the object and push it to the db\r\n      let data = {};\r\n      data[number] = {\r\n        capacity: capacity,\r\n        type: type,\r\n        occupied: occupied,\r\n        adult: adult,\r\n        kid: kid,\r\n        number: number,\r\n      };\r\n      setData(\"room\", data);\r\n\r\n      // update the state with the new object so we don't have to pull whole db again\r\n      let temp = rooms.slice();\r\n      let match = false;\r\n      temp.forEach((u) => {\r\n        if (Object.values(u).includes(number)) {\r\n          temp[temp.indexOf(u)] = data[number];\r\n          setRooms(temp);\r\n          setOpen(false);\r\n          match = true;\r\n        }\r\n      });\r\n      if (!match) {\r\n        temp.push(data[number]);\r\n        setRooms(temp);\r\n        setOpen(false);\r\n      }\r\n    }\r\n  };\r\n  return open ? (\r\n    <form className=\"form\" onSubmit={addRoom}>\r\n      <label htmlFor=\"capacity\">Капацитет:</label>\r\n      <input\r\n        onChange={(e) => {\r\n          setCapacity(e.target.value);\r\n        }}\r\n        name=\"capacity\"\r\n        type=\"text\"\r\n      ></input>\r\n      <label htmlFor=\"type\">Тип:</label>\r\n      <input\r\n        onChange={(e) => {\r\n          setType(e.target.value);\r\n        }}\r\n        name=\"type\"\r\n        type=\"text\"\r\n      ></input>\r\n      <label htmlFor=\"occupied\">Свободна:</label>\r\n      <div>\r\n        <input\r\n          onChange={(e) => {\r\n            setOccupied(true);\r\n          }}\r\n          name=\"occupied\"\r\n          id=\"occ1\"\r\n          type=\"radio\"\r\n          value=\"Активен\"\r\n        ></input>\r\n        <label htmlFor=\"occ1\">Да</label>\r\n      </div>\r\n      <div>\r\n        <input\r\n          onChange={(e) => {\r\n            setOccupied(false);\r\n          }}\r\n          name=\"occupied\"\r\n          id=\"occ2\"\r\n          type=\"radio\"\r\n          value=\"Уволнен\"\r\n        ></input>\r\n        <label htmlFor=\"occ2\">Не</label>\r\n      </div>\r\n      <label htmlFor=\"adult\">Цена за възрастен на легло:</label>\r\n      <input\r\n        onChange={(e) => {\r\n          setAdult(e.target.value);\r\n        }}\r\n        name=\"adult\"\r\n        type=\"text\"\r\n      ></input>\r\n      <label htmlFor=\"kid\">Цена за дете на легло:</label>\r\n      <input\r\n        onChange={(e) => {\r\n          setKid(e.target.value);\r\n        }}\r\n        name=\"kid\"\r\n        type=\"text\"\r\n      ></input>\r\n      <label htmlFor=\"number\">Номер на стаята:</label>\r\n      <input\r\n        onChange={(e) => {\r\n          setNumber(e.target.value);\r\n        }}\r\n        name=\"number\"\r\n        type=\"text\"\r\n      ></input>\r\n      <button type=\"submit\">Добави</button>\r\n    </form>\r\n  ) : (\r\n    <button\r\n      onClick={() => {\r\n        setOpen(true);\r\n      }}\r\n    >\r\n      Add/Edit room\r\n    </button>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport firebaseInstance, {\r\n  orderData,\r\n  setData,\r\n  deleteData,\r\n  pullData,\r\n} from \"../../firebase\";\r\nimport \"../SharedStyles/styles.scss\";\r\n\r\nexport default function Reservation() {\r\n  const [reservations, setReservations] = useState();\r\n  const [search, setSearch] = useState();\r\n\r\n  useEffect(() => {\r\n    if (!reservations) pullReservations(\"capacity\", 10);\r\n  });\r\n\r\n  const searchReservation = (query) => {\r\n    let temp = reservations.slice();\r\n    let matches = [];\r\n    temp.forEach((u) => {\r\n      if (Object.values(u).includes(query)) {\r\n        matches.push(u);\r\n      }\r\n    });\r\n    if (matches.length > 0) {\r\n      return setSearch(matches);\r\n    }\r\n    setSearch(undefined);\r\n  };\r\n\r\n  // takes care of the initial call to the db to get all the reservations\r\n  const pullReservations = (sorting, pagination) => {\r\n    orderData(\"reservation\", sorting, pagination)\r\n      .then((u) => {\r\n        setReservations(u);\r\n      })\r\n      .catch((e) => console.log(e));\r\n  };\r\n\r\n  const formatReservation = (reservationsData) => {\r\n    return reservationsData\r\n      ? reservationsData.map((reservation) => (\r\n          <span key={`${reservation.dateaccommodation}${reservation.roomnum}`}>\r\n            <p>{reservation.roomnum}</p>\r\n            <p>{reservation.usercreated.id}</p>\r\n            <p>{reservation.price}</p>\r\n            <div>\r\n              {Object.values(reservation.occupants).map((o) => {\r\n                // add an on click that shows reservations for this user here or in users not sure\r\n                return <p>{`${o.firstname} ${o.lastname}`}</p>;\r\n              })}\r\n            </div>\r\n            <p>{reservation.dateaccommodation}</p>\r\n            <p>{reservation.daterelease}</p>\r\n            <p>{reservation.breakfast.toString()}</p>\r\n            <p>{reservation.allinclusive.toString()}</p>\r\n            <p\r\n              className=\"action\"\r\n              onClick={() => {\r\n                deleteData(\r\n                  \"reservation\",\r\n                  `${reservation.dateaccommodation} | ${reservation.roomnum}`\r\n                );\r\n                let temp = reservations.slice();\r\n                temp.splice(temp.indexOf(reservation), 1);\r\n                setReservations(temp);\r\n              }}\r\n            >\r\n              Delete\r\n            </p>\r\n          </span>\r\n        ))\r\n      : \"Loading...\";\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Add reservations:</h2>\r\n      <Form\r\n        reservations={reservations}\r\n        setReservations={setReservations}\r\n      ></Form>\r\n      <h1>Reservations:</h1>\r\n      <div>\r\n        <label htmlFor=\"search\">Search:</label>\r\n        <input\r\n          name=\"search\"\r\n          type=\"text\"\r\n          onChange={(e) => searchReservation(e.target.value)}\r\n        ></input>\r\n      </div>\r\n      <div>\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => {\r\n            pullReservations(\"roomnum\", 10);\r\n          }}\r\n        >\r\n          10\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => {\r\n            pullReservations(\"roomnum\", 25);\r\n          }}\r\n        >\r\n          25\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => {\r\n            pullReservations(\"roomnum\", 50);\r\n          }}\r\n        >\r\n          50\r\n        </button>\r\n      </div>\r\n      <div className=\"list\">\r\n        <span className=\"columns\">\r\n          <p>roomNum</p>\r\n          <p>userCreated</p>\r\n          <p>price</p>\r\n          <p>occupants</p>\r\n          <p>dateAccommodation</p>\r\n          <p>dateRelease</p>\r\n          <p>breakfast</p>\r\n          <p>allInclusive</p>\r\n          <p>Delete</p>\r\n        </span>\r\n        {search ? formatReservation(search) : formatReservation(reservations)}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Form({ reservations, setReservations }) {\r\n  const [open, setOpen] = useState(false);\r\n  const [searchOccupant, setSearchOccupant] = useState(\"\");\r\n  const [users, setUsers] = useState();\r\n  const [clients, setClients] = useState();\r\n  const [rooms, setRooms] = useState();\r\n  const [roomNum, setRoomNum] = useState(\"\");\r\n  const [userCreated, setUserCreated] = useState();\r\n  const [occupants, setOccupants] = useState([]);\r\n  const [dateAccommodation, setDateAccomodation] = useState(\"\");\r\n  const [dateRelease, setDateRelease] = useState(\"\");\r\n  const [breakfast, setBreakfast] = useState(false);\r\n  const [allInclusive, setAllInclusive] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!users) {\r\n      pullData(\"user\", \"id\").then((data) => {\r\n        setUsers(data);\r\n      });\r\n    }\r\n    if (!userCreated && users) {\r\n      let temp = users.slice();\r\n      temp.forEach((u) => {\r\n        if (u.email === firebaseInstance.auth().currentUser.email) {\r\n          setUserCreated(u);\r\n        }\r\n      });\r\n    }\r\n    if (!clients) {\r\n      pullData(\"client\", \"phonenumber\").then((data) => {\r\n        setClients(data);\r\n      });\r\n    }\r\n    if (!rooms) {\r\n      pullData(\"room\", \"phonenumber\").then((data) => {\r\n        setRooms(data);\r\n      });\r\n    }\r\n  });\r\n\r\n  const addReservation = (e) => {\r\n    e.preventDefault();\r\n    e.target.reset();\r\n\r\n    if (\r\n      roomNum &&\r\n      userCreated &&\r\n      occupants &&\r\n      dateAccommodation &&\r\n      dateRelease\r\n    ) {\r\n      let datediff = Math.floor(\r\n        (Date.parse(dateRelease) - Date.parse(dateAccommodation)) / 86400000\r\n      );\r\n      let price = 0;\r\n      rooms.forEach((r) => {\r\n        if (r.number === roomNum) {\r\n          occupants.forEach((o) => {\r\n            if (o.adult) {\r\n              price += r.adult - 0;\r\n            } else {\r\n              price += r.kid - 0;\r\n            }\r\n          });\r\n        }\r\n      });\r\n      if (allInclusive) {\r\n        price *= 1.5;\r\n      }\r\n      if (breakfast) {\r\n        price *= 1.1;\r\n      }\r\n      price *= datediff;\r\n      // create the object and push it to the db\r\n      let data = {};\r\n      data[`${dateAccommodation} | ${roomNum}`] = {\r\n        roomnum: roomNum,\r\n        usercreated: userCreated,\r\n        occupants: occupants.reduce(\r\n          (obj, item) => ((obj[item.phonenumber] = item), obj),\r\n          {}\r\n        ),\r\n        dateaccommodation: dateAccommodation,\r\n        daterelease: dateRelease,\r\n        breakfast: breakfast,\r\n        allinclusive: allInclusive,\r\n        price: price.toFixed(2),\r\n      };\r\n      setData(\"reservation\", data);\r\n\r\n      // update the state with the new object so we don't have to pull whole db again\r\n      let temp = reservations.slice();\r\n      let match = false;\r\n      temp.forEach((u) => {\r\n        if (Object.values(u).includes(`${dateAccommodation} | ${roomNum}`)) {\r\n          temp[temp.indexOf(u)] = data[`${dateAccommodation} | ${roomNum}`];\r\n          setReservations(temp);\r\n          setOpen(false);\r\n          setOccupants([]);\r\n          match = true;\r\n        }\r\n      });\r\n      if (!match) {\r\n        temp.push(data[`${dateAccommodation} | ${roomNum}`]);\r\n        setReservations(temp);\r\n        setOpen(false);\r\n        setOccupants([]);\r\n      }\r\n    }\r\n  };\r\n\r\n  return open ? (\r\n    <form className=\"form\" onSubmit={addReservation}>\r\n      <label htmlFor=\"roomnum\">Номер на стаята:</label>\r\n      <input\r\n        onChange={(e) => {\r\n          setRoomNum(e.target.value);\r\n        }}\r\n        name=\"roomnum\"\r\n        type=\"text\"\r\n      ></input>\r\n      <label htmlFor=\"occupants\">\r\n        Списък с настанени клиенти: *търсенето става по първо или фамилно име*\r\n      </label>\r\n      <input\r\n        onChange={(e) => {\r\n          setSearchOccupant(e.target.value);\r\n        }}\r\n        name=\"occupants\"\r\n        type=\"search\"\r\n      ></input>\r\n      <button\r\n        onClick={() => {\r\n          let temp = clients.slice();\r\n          temp.forEach((c) => {\r\n            // check if the client exists and if we have already added it\r\n            if (\r\n              Object.values(c).includes(searchOccupant) &&\r\n              !occupants.includes(c)\r\n            ) {\r\n              let temp = occupants.slice();\r\n              temp.push(c);\r\n              setOccupants(temp);\r\n            }\r\n          });\r\n        }}\r\n        type=\"button\"\r\n      >\r\n        Добави\r\n      </button>\r\n      {occupants.map((e) => {\r\n        return (\r\n          <div key={e.phonenumber}>\r\n            <p>{`${e.firstname} ${e.lastname}`}</p>\r\n            <button\r\n              onClick={() => {\r\n                let temp = occupants.slice();\r\n                temp.splice(temp.indexOf(e), 1);\r\n                setOccupants(temp);\r\n              }}\r\n              type=\"button\"\r\n            >\r\n              премахни от списъка\r\n            </button>\r\n          </div>\r\n        );\r\n      })}\r\n      <label htmlFor=\"dateaccomodation\">Дата на настаняване:</label>\r\n      <input\r\n        onChange={(e) => {\r\n          setDateAccomodation(e.target.value);\r\n        }}\r\n        name=\"dateaccomodation\"\r\n        type=\"date\"\r\n      ></input>\r\n      <label htmlFor=\"daterelease\">Дата на освобождаване:</label>\r\n      <input\r\n        onChange={(e) => {\r\n          setDateRelease(e.target.value);\r\n        }}\r\n        name=\"daterelease\"\r\n        type=\"date\"\r\n      ></input>\r\n      <label htmlFor=\"breakfast\">Включена закуска:</label>\r\n      <div>\r\n        <input\r\n          onChange={(e) => {\r\n            setBreakfast(true);\r\n          }}\r\n          name=\"breakfast\"\r\n          id=\"brkf1\"\r\n          type=\"radio\"\r\n        ></input>\r\n        <label htmlFor=\"brkf1\">Да</label>\r\n      </div>\r\n      <div>\r\n        <input\r\n          onChange={(e) => {\r\n            setBreakfast(false);\r\n          }}\r\n          name=\"breakfast\"\r\n          id=\"brkf2\"\r\n          type=\"radio\"\r\n        ></input>\r\n        <label htmlFor=\"brkf2\">Не</label>\r\n      </div>\r\n      <label htmlFor=\"allinclusive\">Включен allinclusive:</label>\r\n      <div>\r\n        <input\r\n          onChange={(e) => {\r\n            setAllInclusive(true);\r\n          }}\r\n          name=\"allinclusive\"\r\n          id=\"alli1\"\r\n          type=\"radio\"\r\n        ></input>\r\n        <label htmlFor=\"alli1\">Да</label>\r\n      </div>\r\n      <div>\r\n        <input\r\n          onChange={(e) => {\r\n            setAllInclusive(false);\r\n          }}\r\n          name=\"allinclusive\"\r\n          id=\"alli2\"\r\n          type=\"radio\"\r\n        ></input>\r\n        <label htmlFor=\"alli2\">Не</label>\r\n      </div>\r\n      <button type=\"submit\">Добави</button>\r\n    </form>\r\n  ) : (\r\n    <button\r\n      onClick={() => {\r\n        setOpen(true);\r\n      }}\r\n    >\r\n      Add/Edit reservation\r\n    </button>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function NoMatch() {\r\n  return <div>Error404</div>;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport firebase from \"../../firebase.js\";\r\n\r\nexport default function Login() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  let history = useHistory();\r\n\r\n  const loginUser = (e) => {\r\n    e.preventDefault();\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then(() => {\r\n        firebase.auth().onAuthStateChanged((user) => {\r\n          if (user) {\r\n            history.replace(\"/Hotel-Reservations/\");\r\n          }\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e.code);\r\n        console.log(e.message);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Hotel Reservations</h1>\r\n      <h2>Моля влезте във вашият акаунт</h2>\r\n      <form onSubmit={loginUser}>\r\n        <input\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          required={true}\r\n          type=\"email\"\r\n          placeholder=\"examplemail@provider.com\"\r\n        ></input>\r\n        <input\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          required={true}\r\n          placeholder=\"password\"\r\n          type=\"password\"\r\n        ></input>\r\n        <div>\r\n          <button type=\"button\">\r\n            <img></img>\r\n          </button>\r\n          <p>Запомни ме</p>\r\n        </div>\r\n        <button type=\"submit\">Вход</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Main() {\r\n  return (\r\n    <ul>\r\n      <li>\r\n        <Link to=\"/Hotel-Reservations/User\">Users Database</Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/Hotel-Reservations/Client\">Clients Database</Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/Hotel-Reservations/Room\">Rooms Database</Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/Hotel-Reservations/Reservation\">Reservations Database</Link>\r\n      </li>\r\n    </ul>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport firebase from \"../../firebase.js\";\r\nimport User from \"../User/index\";\r\nimport Client from \"../Client/index\";\r\nimport Room from \"../Room/index\";\r\nimport Reservation from \"../Reservation/index\";\r\nimport NoMatch from \"../NoMatch/index\";\r\nimport Login from \"../Login/index\";\r\nimport Main from \"../Main/index\";\r\nimport \"./styles.scss\";\r\nimport \"normalize.css\";\r\n\r\nexport default function Routing() {\r\n  const [user, setUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    firebase.auth().onAuthStateChanged((u) => {\r\n      if (u) {\r\n        // User is signed in.\r\n        setUser(u);\r\n      } else {\r\n        setUser(\"anon\");\r\n      }\r\n    });\r\n  });\r\n\r\n  return user ? (\r\n    <Router>\r\n      <div className=\"main\">\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Redirect to=\"/Hotel-Reservations/\"></Redirect>\r\n          </Route>\r\n          <PrivateRoute user={user} exact path=\"/Hotel-Reservations/\">\r\n            <Main></Main>\r\n          </PrivateRoute>\r\n          <PrivateRoute user={user} path=\"/Hotel-Reservations/User\">\r\n            <User></User>\r\n          </PrivateRoute>\r\n          <PrivateRoute user={user} path=\"/Hotel-Reservations/Client\">\r\n            <Client></Client>\r\n          </PrivateRoute>\r\n          <PrivateRoute user={user} path=\"/Hotel-Reservations/Room\">\r\n            <Room></Room>\r\n          </PrivateRoute>\r\n          <PrivateRoute user={user} path=\"/Hotel-Reservations/Reservation\">\r\n            <Reservation></Reservation>\r\n          </PrivateRoute>\r\n          <Route path=\"/Hotel-Reservations/Login\">\r\n            <Login></Login>\r\n          </Route>\r\n          <Route path=\"*\">\r\n            <NoMatch></NoMatch>\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  ) : (\r\n    <div>Loading...</div>\r\n  );\r\n}\r\n\r\nfunction PrivateRoute({ user, children, ...rest }) {\r\n  return (\r\n    <Route {...rest}>\r\n      {user !== \"anon\" && user ? (\r\n        children\r\n      ) : (\r\n        <Redirect to={\"/Hotel-Reservations/Login\"}></Redirect>\r\n      )}\r\n    </Route>\r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Routing from \"./components/Routing/index\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Routing />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}